//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-793 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 09:15:46 PM PDT 
//


package editor.io;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the tosc package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Document_QNAME = new QName("", "document");
    private final static QName _Let_QNAME = new QName("", "let");
    private final static QName _Choice_QNAME = new QName("", "choice");
    private final static QName _Object_QNAME = new QName("", "object");
    private final static QName _Part_QNAME = new QName("", "part");
    private final static QName _Variable_QNAME = new QName("", "variable");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: tosc
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Let.Body }
     * 
     */
    public Let.Body createLetBody() {
        return new Let.Body();
    }

    /**
     * Create an instance of {@link Alternative }
     * 
     */
    public Alternative createAlternative() {
        return new Alternative();
    }

    /**
     * Create an instance of {@link Dimension }
     * 
     */
    public Dimension createDimension() {
        return new Dimension();
    }

    /**
     * Create an instance of {@link Choice.Alternatives }
     * 
     */
    public Choice.Alternatives createChoiceAlternatives() {
        return new Choice.Alternatives();
    }

    /**
     * Create an instance of {@link Let }
     * 
     */
    public Let createLet() {
        return new Let();
    }

    /**
     * Create an instance of {@link Binding.Value }
     * 
     */
    public Binding.Value createBindingValue() {
        return new Binding.Value();
    }

    /**
     * Create an instance of {@link Choice }
     * 
     */
    public Choice createChoice() {
        return new Choice();
    }

    /**
     * Create an instance of {@link Dimensions }
     * 
     */
    public Dimensions createDimensions() {
        return new Dimensions();
    }

    /**
     * Create an instance of {@link Variable }
     * 
     */
    public Variable createVariable() {
        return new Variable();
    }

    /**
     * Create an instance of {@link Part.SubObjects }
     * 
     */
    public Part.SubObjects createPartSubObjects() {
        return new Part.SubObjects();
    }

    /**
     * Create an instance of {@link Binding }
     * 
     */
    public Binding createBinding() {
        return new Binding();
    }

    /**
     * Create an instance of {@link Tags }
     * 
     */
    public Tags createTags() {
        return new Tags();
    }

    /**
     * Create an instance of {@link editor.io.Object }
     * 
     */
    public editor.io.Object createObject() {
        return new editor.io.Object();
    }

    /**
     * Create an instance of {@link Part }
     * 
     */
    public Part createPart() {
        return new Part();
    }

    /**
     * Create an instance of {@link Document }
     * 
     */
    public Document createDocument() {
        return new Document();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Document }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "document")
    public JAXBElement<Document> createDocument(Document value) {
        return new JAXBElement<Document>(_Document_QNAME, Document.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Let }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "let", substitutionHeadNamespace = "", substitutionHeadName = "object")
    public JAXBElement<Let> createLet(Let value) {
        return new JAXBElement<Let>(_Let_QNAME, Let.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Choice }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "choice", substitutionHeadNamespace = "", substitutionHeadName = "object")
    public JAXBElement<Choice> createChoice(Choice value) {
        return new JAXBElement<Choice>(_Choice_QNAME, Choice.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link editor.io.Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "object")
    public JAXBElement<editor.io.Object> createObject(editor.io.Object value) {
        return new JAXBElement<editor.io.Object>(_Object_QNAME, editor.io.Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Part }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "part", substitutionHeadNamespace = "", substitutionHeadName = "object")
    public JAXBElement<Part> createPart(Part value) {
        return new JAXBElement<Part>(_Part_QNAME, Part.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Variable }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "variable", substitutionHeadNamespace = "", substitutionHeadName = "object")
    public JAXBElement<Variable> createVariable(Variable value) {
        return new JAXBElement<Variable>(_Variable_QNAME, Variable.class, null, value);
    }

}
